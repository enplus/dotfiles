
" run neomake on the current file on every write:
" autocmd! BufWritePost *.py Neomake "Run :Neomake on w

" call neomake#configure#automake('nw', 750)
" autocmd! BufEnter,BufWritePost * Neomake
" autocmd FileType c,cpp,python,javascript,haskell map <F8> :Neomake<CR>
call neomake#configure#automake('w')

hi MyErrorMsg   ctermfg=red ctermbg=237
hi MyWarningMsg ctermfg=227 ctermbg=237

" 'flake8'이 좀더 엄격한 문법검사 'pep8','pylint'
" let g:neomake_python_enabled_makers = ['pyflakes', 'pep8']

let g:neomake_python_enabled_makers = ['flake8']
let g:neomake_error_sign = { 'text': '✖', 'texthl': 'MyErrorMsg' }
let g:neomake_warning_sign = { 'text': '⚠', 'texthl': 'MyWarningMsg' }
let g:neomake_highlight_lines = 0
let g:neomake_highlight_columns = 1

" hi NeomakeWarningDefault cterm=underline ctermbg=227 ctermfg=167
" hi cterm=underline ctermfg=167 gui=undercurl guisp=#fb4934

" highlight NeomakeErrorMsg ctermfg=237 ctermbg=227
" let g:neomake_warning_sign = { 'text': '⚠', 'texthl': 'NeomakeErrorMsg' }

" Python
" let g:neomake_python_flake8_maker = { 'args': ['--ignore= E115,E116,E266,E501'], }

    " \ '--max-line=length = 100',
    " \ '--ignore=E221,E241,E272,E251,W702,E203,E201,E202',
    " \ '--ignore=E115,E128,E116,E266,E501', 
let g:neomake_python_flake8_maker = {
    \ 'args': [
    \ '--max-line-length=100',
    \ '--ignore=E115,E128,E116,E266,E501', 
    \ '--format=default'],
    \ 'errorformat':
        \ '%E%f:%l: could not compile,%-Z%p^,' .
        \ '%A%f:%l:%c: %t%n %m,' .
        \ '%A%f:%l: %t%n %m,' .
        \ '%-G%.%#',
    \ }
" E116 | unexpected indentation (comment)
" E128 | continuation line under-indented for visual indent
" E501 | line too long (79 char)

" let g:neomake_python_flake8_maker = {
"     \ 'args': ['--ignore=E221,E241,E272,E251,W702,E203,E201,E202',  '--format=default'],
"     \ 'errorformat':
"         \ '%E%f:%l: could not compile,%-Z%p^,' .
"         \ '%A%f:%l:%c: %t%n %m,' .
"         \ '%A%f:%l: %t%n %m,' .
"         \ '%-G%.%#',
"     \ }

" let g:neomake_place_signs = 1
" let g:neomake_cpp_enabled_markers = ['gcc', 'clang']
let g:neomake_cpp_clang_args = ['-std=c++11', '-Wextra', '-Wall', '-fsanitize=undefined', '-g']
" let g:neomake_open_list = 2
" map <F9> :w <CR>:!g++ -std=c++11 % -o %:r && ./%:r<cr>
