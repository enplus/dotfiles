# Default Shell is Zsh
set -g default-shell /usr/bin/zsh
set -g default-command /usr/bin/zsh

# 1. Key Bindings {{{
# Prefix key Bind - <C-b> to <C-s>
set -g prefix C-s
#set -g prefix C-q
#unbind C-b

# Last window toggle
#bind C-q last-window
#bind C-s last-window

# window change
#bind -n C-S-Pageup swap-window -t :-	# move left
#bind -n C-S-Pagedown swap-window -t :+  # move right

# switch windows alt+number
bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9

# Toggle pane size
bind -n M-0 resize-pane -Z

# tmux inside tmux
#bind q send-prefix
#bind -n C-s send-prefix

# enable vi-mode
setw -g mode-keys vi
#set -o vi - from http://blog.sanctum.geek.nz/vi-mode-in-tmux/
# tmux <= 2.3
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
# bind -t vi-copy y copy-pipe "xclip -sel clip -i"
# tmux >= 2.4
# bind -T copy-mode-vi 'v' send-keys -X begin-selection
# bind -T copy-mode-vi 'y' send-keys -X copy-selection
# bind -T copy-mode-vi 'y' copy-pipe "xclip -sel clip -i"

if-shell "if [[ `tmux -V | cut -d' ' -f2` -lt 2.4 ]]; then true; else false; fi" \
	'bind -t vi-copy 'v' begin-selection; \
	 bind -t vi-copy 'y' copy-selection;  \
	 bind -t vi-copy y copy-pipe "xclip -sel clip -i" '
# tmux >= 2.4
if-shell "if [[ `tmux -V | cut -d' ' -f2` -ge 2.4 ]]; then true; else false; fi" \
	'bind -T copy-mode-vi 'v' send-keys -X begin-selection; \
	 bind -T copy-mode-vi 'y' send-keys -X copy-selection; \
	 bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -sel clip -i"'

# New windows ( Split, V-Split )
bind 'c' new-window
bind 'o' split-window	 -c '#{pane_current_path}'
bind 'p' split-window -h -c '#{pane_current_path}'

# . = move, > = swap
bind > command-prompt "swap-window -t '%%'"

# Pane border colors
set -g pane-active-border-fg '#990000'
set -g pane-border-fg '#555555'

# Bind to reload config
bind r source-file ~/.tmux.conf \; display "Reloaded from ~/.tmux.conf"

## behaviors ##

set -s escape-time 50
# 0 is too far from ` ;)
set -g base-index 1
setw -g aggressive-resize on

# in tmux.conf
#
# alternatively, check file exists before sourcing it in tmux.conf
# if-shell "test -f [file]" "source [file]"
#
## layouts ##
#		set -g status-bg black
#		set -g status-fg white
#
#		prefix='#{?client_prefix,#[bg=cyan]#[fg=white]^Q#[bg=default]#[fg=white],  }'
#
#		set -g status-left-length 20
#		set -g status-left "$prefix#[fg=green]#S#[fg=default]#[bg=default] "

# sync to .thymerc: tmux_theme

#		set -g status-right "#(cat ~/.thyme-tmux)#[fg=black]#[bg=blue] #[bg=blue,fg=white] %Y-%m-%d %H:%M "
#		set -g status-interval 1
#
#		status_color="#{?window_bell_flag,red,#{?window_active,blue,black}}"
#		status_prefix="#[bg=$status_color]#[fg=#{status-bg}]#[fg=default]"
#		status_postfix="#[bg=black]#[fg=$status_color]"
#		status_format="$status_prefix #[bg=$status_color]#I: #W $status_postfix"
#		setw -g window-status-separator ""
#		setw -g window-status-format "$status_format"
#		setw -g window-status-last-style underscore
#		setw -g window-status-current-format "$status_format"

####################################################################################
## use mouse
####################################################################################
# mouse scroll
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -sa terminal-overrides ',xterm-256color:RGB'

# enable mouse behavior.
# for this, tmux now captures mouse actions from the terminal.
# (shift+mouse) will allow us to select the raw texts instead.

# if-shell "if [[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]; then true; else false; fi" \
# 		'setw -g mode-mouse on ; \
# 		 set -g mouse-select-pane on ; \
# 		 set -g mouse-resize-pane on ; \
# 		 set -g mouse-select-window on ;'
# if-shell "if [[ `tmux -V | cut -d' ' -f2` -ge 2.1 ]]; then true; else false; fi" "setw -g mouse on"
# bind -n WheelUpPane if "[[ #{pane_current_command} =~ vim ]]" "select-pane -t = ; send-keys -M" "select-pane -t = ; send-keys Up"
# bind -n WheelDownPane if "[[ #{pane_current_command} =~ vim ]]" "select-pane -t = ; send-keys -M" "select-pane -t = ; send-keys Down"

setw -g mouse on

bind m setw -g mouse on\; display "Mouse: ON"
bind M setw -g mouse off\; display "Mouse: OFF" 

# Start copy mode when scrolling up or down
#bind -n WheelUpPane copy-mode
#bind -n WheelDownPane copy-mode

#### COLOUR (Solarized 256)# {{{
##############################################################################################
# default statusbar colors
#set -g status-bg colour235 #base02
#set -g status-fg colour136 #yellow
#set -g status-attr default

# default window title colors
#set-window-option -g window-status-fg colour244 #base0
#set-window-option -g window-status-bg default
###set-window-option -g window-status-attr dim

# active window title colors
#set-window-option -g window-status-current-fg colour166 #orange
#set-window-option -g window-status-current-bg default
###set-window-option -g window-status-current-attr bright

# pane border
#set -g pane-border-fg colour235 #base02
#set -g pane-active-border-fg colour240 #base01

# message text
#set -g message-bg colour235 #base02
#set -g message-fg colour166 #orange

# pane number display
#set -g display-panes-active-colour colour33 #blue
#set -g display-panes-colour colour166 #orange

# clock
#set-window-option -g clock-mode-colour colour64 #green

# bell
#set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red
############################################################################################### }}}
#
##set -g @plugin 'seebi/tmux-colors-solarized'

############################################################################################### 
#	Help - 	Managing sessions
#
#	Creating a session:
#
#	tmux new-session -s work
#	Create a new session that shares all windows with an existing session, but has its own separate notion of which window is current:
#
#	tmux new-session -s work2 -t work
#	Attach to a session:
#
#	tmux attach -t work
#	Detach from a session: C-a d.
#
#	Switch between sessions:
############################################################################################### 

# 2. Appereance and General Preferences {{{
# =========================================

# tmux -2 option default
set -g default-terminal "screen-256color"

# 0 is too far from ` ;)
set -g base-index 1
#set -g pane-base-index 1

# window rename off
set-window-option -g automatic-rename off
#set -g allow-rename off


# Status Bar

# Update status every 1 seconds
set -g status-interval 1

set -g set-titles on
set -g set-titles-string '#S #I:#W (#h)' # session name, window index, window title, hostname

# from tmuxline.vim
set -g status-style "bg=colour236,none"
set -g message-command-style "fg=colour231,bg=colour31"
set -g message-style "fg=colour231,bg=colour31"
set -g status-justify "right"
set -g status "on"
set -g pane-active-border-style "fg=colour254"
set -g status-left-style "none"
set -g status-left-attr "none"
set -g status-left-length "100"
set -g status-right-style "none"
set -g status-right-attr "none"
set -g status-right-length "100"
set -g status-attr "none"
#set -g status-utf8 "on"
setw -g window-status-style "fg=colour250,bg=colour234,none"
setw -g window-status-activity-style "fg=colour250,bg=colour234,underscore"
setw -g window-status-separator ""
set -g status-left "#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour236,nobold,nounderscore,noitalics]"
#set -g status-left "#[fg=colour247,bg=colour236,bold] #S #[fg=colour254,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour11,bg=black] #(whoami) > #(uptime | cud -d \" \" -f 1,2,3) #[fg=colour236,bg=colour234,nobold,nounderscore,noitalics]"
#set -g status-right "#[fg=colour232,bg=black,nobold,nounderscore,noitalics] #[fg=colour11,bg=black] %R - %y/%m/%d(%a) #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour6,bg=colour236] #H "
set -g status-right "#[fg=colour247,bg=colour236] %Y-%m-%d  %H:%M #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour235,bg=colour252] #h "
#2017/02/24 ver - setw -g window-status-format "#[bg=colour236,fg=colour247]#[fg=colour236,bg=colour247,nobold,nounderscore,noitalics] #I: #W #[bg=colour247,fg=colour236]" #[default]#[fg=colour234,bg=colour234,nobold,nounderscore,noitalics]"
setw -g window-status-format "#[fg=colour3,bg=colour236,nobold,nounderscore,noitalics] #I: #W " # #[default]#[fg=colour234,bg=colour234,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[bg=colour236,fg=colour9]#[fg=colour231,bg=colour9,bold] #I: #W #F #[fg=colour9,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour236,bg=colour9]"

# pane border colors
set -g pane-border-style "fg=colour240,bg=default" # inactive pane border: gray
set -g pane-active-border-style "fg=green,bg=default"  # active pane border: green

### window notifications
###   set-window-option -g monitor-activity on
###   set -g visual-activity off          # no 'Activity in window <n>'
###
### Allow the arrow key to be used immediately after changing windows
###   set -g repeat-time 0
###
### Environment should be read from the parent environment
###   set -g update-environment -r
###
### More history and scrollback
set -g history-limit 30000
###
### }}}

# 3. vim-tmux-navigator {{{
# =========================

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# Select - Last pane
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# }}}

# 3. Tmux Plugins {{{
# ===================

# Tmux Plugin Manager
# 1. $ git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#
# List of plugins
# @see https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# tmux-copycat
# use vim-like navigation (n, N)
#set -g @copycat_next 'N'
#set -g @copycat_prev 'n'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}
# Battery Manager Status-bar
#set -g status-right 'Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '
#set -g status-right '#(date) | %a %h-%d %H:%M '

# for neovim
set -g focus-events on
